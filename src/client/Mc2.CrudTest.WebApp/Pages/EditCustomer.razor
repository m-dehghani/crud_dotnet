@page "/customer/update/{CustomerId:int}"
@using Mc2.CrudTest.WebApp.ViewModels
@inject ICustomerService CustomerService

<h3>Edit Customer</h3>
<hr />

@if (customer is not null)
{
    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="firstName">First Name</label>
        <input type="text" class="form-control" id="firstName" @bind="customer.FirstName" disabled="true" />
    </div>

    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="lastName">Last Name</label>
        <input type="text" class="form-control" id="lastName" @bind="customer.LastName" disabled="true" />
    </div>

    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="dateOfBirth">Date of Birth</label>
        <input type="date" class="form-control" id="dateOfBirth" @bind="customer.DateOfBirth" disabled="true" />
    </div>

    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="phoneNumber">Phone Number</label>
        <input type="text" class="form-control" id="phoneNumber" @bind="customer.PhoneNumber" />
    </div>

    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" @bind="customer.Email" />
    </div>

    <div class="form-group" style="margin-bottom: 10px; width:60%">
        <label for="bankAccountNumber">Bank Account Number</label>
        <input type="text" class="form-control" id="bankAccountNumber" @bind="customer.BankAccountNumber" />
    </div>

    <button type="button" class="btn btn-primary" @onclick="SaveChanges">Save Changes</button>
}
else
{
    <p>Loading ...</p>
}


@code {
    [Parameter] public int CustomerId { get; set; }
    private Customer customer;

    protected override async Task OnInitializedAsync()
    {
        customer = await CustomerService.GetCustomerById(CustomerId);
    }

    private async Task SaveChanges()
    {
        var editedCustomer = new CustomerUpdateInput
            {
                PhoneNumber = customer.PhoneNumber,
                Email = customer.Email,
                BankAccountNumber = customer.BankAccountNumber
            };

        var resCode = await CustomerService.UpdateCustomer(CustomerId, editedCustomer);
    }
}